---
- name: create directory
  file:
    path: "{{ network_interface_path }}"
    state: directory
  when: network_interfaces | length > 0

- name: all interfaces
  template:
    src: all_interfaces.j2
    dest: "{{ network_all_interfaces_path }}"
  notify: restart
  when: network_interfaces | length > 0

- name: list network interfaces
  command: "find {{ network_interface_path }} -name 'device-*'"
  changed_when: no
  register: network_existing_files

- name: configurations
  template:
    src: device.j2
    dest: "{{ network_interface_path }}/device-{{ item.device }}-{{ item.family }}"
  with_items: network_interfaces
  register: network_configuration_result

- name: remove configurations
  file:
    dest: "{{ item }}"
    state: absent
  when: >
    network_manage_devices and
    item in (network_configuration_result.results | map(attribute='path'))
  with_items: network_existing_files

- name: restart devices
  service:
    name: "{{ network_service }}"
    state: restarted
    arguments: "{{ item.grouper }}"
  when: true in (item.list | map(attribute='changed'))
  with_items: network_configuration_result.results | groupby('item.device')
