# {{ ansible_managed }}
{# schema: item = [ <device>, [<config>, ...] ] #}

{% for config in item.1 %}
{%   if config.auto | default(loop.first) %}
auto {{ config.device }}
{%   endif %}

iface {{ config.device }} {{ config.family | default('inet', true) }} {{ config.method | default('dhcp', true) }}
{%   for key in ['description', 'bond-mode', 'bond-miimon', 'bond-slaves', 'bond-lacp-rate', 'address', 'broadcast', 'gateway', 'netmask', 'network', 'vlan-raw-device', 'bond-master'] %}
{%     if key in config %}
  {{ key }} {{ config[key] }}
{%     endif %}
{%   endfor %}

{%-  if config.nameservers is defined %}

  dns-nameservers {{ config.nameservers | join(' ') }}
{%   endif %}
{%-  if config.dns_search is defined %}
  dns-search {{ config.dns_search }}
{%   endif %}

{%-  if config.bridge is defined -%}

  # bridge settings
{%     for key in ['ports', 'stp', 'fd', 'maxwait', 'waitport'] %}
{%       if key in config.bridge -%}
  bridge_{{ key }} {{ config.bridge[key] }}
{%       endif %}
{%     endfor %}
{%   endif %}

{%-  if config.subnets is defined %}

  # additional subnets
{%     for subnet in config.subnets %}
  up /sbin/ip addr add {{ subnet }} dev {{ config.device }}
  down /sbin/ip addr del {{ subnet }} dev {{ config.device }}
{%     endfor %}
{%   endif %}

{%-  if ['pre-up', 'up', 'post-up', 'pre-down', 'down', 'post-down'] | intersect(config.keys()) %}

  # hook scripts
{%     for key in ['pre-up', 'up', 'post-up', 'pre-down', 'down', 'post-down'] %}
{%       if key in config %}
{%         for value in config[key] %}
  {{ key }} {{ value }}
{%         endfor %}
{%       endif %}
{%     endfor %}
{%   endif %}
{% endfor %}
